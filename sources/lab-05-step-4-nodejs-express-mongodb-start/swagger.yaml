tags:
- name: users
  description: users API
- name: cats
  description: cats API
paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /cats:
    get:
      tags:
      - cats
      summary: Find All cats
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] cats
    post:
      tags:
      - cats
      summary: Add Cat
      parameters:
      - name: body
        in: body
        description: cat Data
        required: true
        schema:
          $ref: '#/definitions/cats'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] cats/id
  /cats/{id}:
    get:
      tags:
      - cats
      summary: Find cat By Id
      parameters:
      - name: id
        in: path
        description: cat Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'


# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      id:
        type: integer
        description: user Id
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  cats:
    type: object
    required:
        - race
        - photoURL
    properties:
      id:
        type: integer
        description: cat Id
      race:
        type: string
        description: race du chat
      origine:
        type: string
        description: origine du chat
      comportement:
        type: string
        description: comportement du chat
      photoURL:
        type: string
        description: URL de la photo du chat
schemes:
 - https
 - http